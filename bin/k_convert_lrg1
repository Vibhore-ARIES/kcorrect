#!/usr/bin/env python

# Converts old v4 LRG template into v5 format.

import os
import kcorrect.template
import fitsio
import numpy as np

origfile = os.path.join(os.getenv('KCORRECT_DIR'),
                        'python', 'kcorrect', 'data', 'templates',
                        'k_nmf_spec.lrg1.fits')
wave = fitsio.read(origfile)
flux = fitsio.read(origfile, ext=8)  # this is the smoothed template

origfile = os.path.join(os.getenv('KCORRECT_DIR'),
                        'python', 'kcorrect', 'data', 'templates',
                        'k_nmf_derived.lrg1.fits')
intsfh = np.ones(1, dtype=np.float32)
mremain = fitsio.read(origfile, ext=17)
mets = fitsio.read(origfile, ext=18)
m300 = fitsio.read(origfile, ext=19)
m300 = np.zeros(1, dtype=np.float32)
m1000 = fitsio.read(origfile, ext=20)
m1000 = np.zeros(1, dtype=np.float32)

s = kcorrect.template.SED(wave=10.**wave, flux=flux)

outfile = os.path.join(os.getenv('KCORRECT_DIR'),
                       'python', 'kcorrect', 'data', 'templates',
                       'kcorrect-lrg1-v4.fits')
s.tofits(outfile)

fitsio.write(outfile, intsfh, extname='INTSFH', clobber=False)
fitsio.write(outfile, mremain, extname='MREMAIN', clobber=False)
fitsio.write(outfile, mets, extname='METS', clobber=False)
fitsio.write(outfile, m300, extname='M300', clobber=False)
fitsio.write(outfile, m1000, extname='M1000', clobber=False)
